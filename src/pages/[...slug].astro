---
import { useStoryblokApi } from '@storyblok/astro'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import BaseLayout from '../layouts/BaseLayout.astro'

const storyblokApi = useStoryblokApi()

const { slug } = Astro.params

let previewStory = Astro.locals['_storyblok_preview_data'] ?? null

let story
if (previewStory) {
  story = previewStory
} else {
  const { data } = await storyblokApi.get(
    `cdn/stories/${slug === undefined ? 'home' : slug}`,
    {
      version: 'draft',
    }
  )

  story = data.story
}
---

<script>
  window.addEventListener(
    'message',
    async (event) => {
      //Onliy listen to messages from the app.storyblok.com
      if (event.origin == 'https://app.storyblok.com') {
        //in the case of input event
        if (event?.data?.action === 'input') {
          const currentBody = document.body
          let story = event?.data?.story
          if (!story) return
          const result = await fetch(location.href, {
            method: 'POST',
            body: JSON.stringify({
              ...story,
              is_storyblok_preview: true,
            }),
            headers: {
              'Content-Type': 'application/json',
            },
          })
          const html = await result.text()
          const parser = new DOMParser()
          // Parse the text to new HTML page
          const doc = parser.parseFromString(html, 'text/html')
          const newBody = doc.body
          if (newBody.outerHTML) {
            //Get current focused element in storyblok
            const cFocusedEle = document.querySelector(
              '[data-blok-focused="true"]'
            )
            if (cFocusedEle) {
              //Get the [data-blok-uid] of the focused element in storyblok
              const focusedElementID = cFocusedEle.getAttribute('data-blok-uid')
              //Now find the same element by above [data-blok-uid] in our new virtual HTML page
              let fEleInNewDom = newBody.querySelector(
                `[data-blok-uid="${focusedElementID}"]`
              )
              // Change add the [data-blok-focused] attribute to this element
              fEleInNewDom.setAttribute('data-blok-focused', 'true')
              console.log('Doing partical replace')
              //Only replace this focused html in the current page
              cFocusedEle.outerHTML = fEleInNewDom.outerHTML
            } else {
              console.log('Doing full replace')
              currentBody.outerHTML = newBody.outerHTML
            }
          }
        }
        if (['published', 'unpublished'].includes(event?.data?.action)) {
          location.reload()
        }
      }
    },
    false
  )
</script>
<BaseLayout>
  <StoryblokComponent blok={story.content} />
</BaseLayout>
